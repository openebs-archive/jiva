# Copyright 2018-2020 The OpenEBS Authors. All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
name: build

on: ['push']

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Shellcheck
        uses: reviewdog/action-shellcheck@v1
        with:
          github_token: ${{ secrets.github_token }}
          reporter: github-pr-review
          path: '.'
          pattern: '*.sh'
          exclude: './vendor/*'
      
      - name: License check
        run: make license-check
  
  feature-test:
    runs-on: ubuntu-latest
    needs: ['lint']
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Build
        run: make build
      
      - name: Test
        run: make test_features

  resiliency-test:
    runs-on: ubuntu-latest
    needs: ['lint']
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Go 1.14
        uses: actions/setup-go@v2
        with:
          go-version: 1.14.7

      - name: Build
        run: make build
      
      - name: Test
        run: make test_resiliency

  functional-test:
    runs-on: ubuntu-latest
    needs: ['lint']
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Build
        run: make build
      
      - name: Test
        run: |
          sudo docker network create --subnet=172.18.0.0/16 stg-net;
          make test_functional;

  jiva:
    runs-on: ubuntu-latest
    needs: ['feature-test', 'resiliency-test', 'functional-test']
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set Image Org
        # sets the default IMAGE_ORG to openebs
        run: |
          [ -z "${{ secrets.IMAGE_ORG }}" ] && IMAGE_ORG=openebs || IMAGE_ORG=${{ secrets.IMAGE_ORG}}
          echo "IMAGE_ORG=${IMAGE_ORG}" >> $GITHUB_ENV

      - name: Set tag
        run: |
          BRANCH="${GITHUB_REF##*/}"
          CI_TAG=${BRANCH#v}-ci
          if [ ${BRANCH} = "master" ]; then
            CI_TAG="ci"
          fi
          echo "IMAGE_TAG=${CI_TAG}" >> $GITHUB_ENV
          echo "BRANCH=${BRANCH}" >> $GITHUB_ENV

      - name: Set Build Date
        id: date
        run: |
          echo "::set-output name=DATE::$(date -u +'%Y-%m-%dT%H:%M:%S%Z')"

      - name: Docker meta
        id: docker_meta
        uses: crazy-max/ghaction-docker-meta@v1
        with:
          # add each registry to which the image needs to be pushed here
          images: |
            ${{ env.IMAGE_ORG }}/jiva
            quay.io/${{ env.IMAGE_ORG }}/jiva
          tag-latest: false
          tag-custom-only: true
          tag-custom: |
            ${{ env.TAG }}

      - name: Print Tag info
        run: |
          echo "BRANCH: ${BRANCH}"
          echo "${{ steps.docker_meta.outputs.tags }}"

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
        with:
          platforms: all

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
        with:
          version: v0.5.1

      - name: Login to Docker Hub
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Login to Quay
        uses: docker/login-action@v1
        with:
          registry: quay.io
          username: ${{ secrets.QUAY_USERNAME }}
          password: ${{ secrets.QUAY_TOKEN }}

      - name: Build & Push Image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./package/jiva.Dockerfile
          push: true
          platforms: linux/amd64, linux/arm64
          tags: |
            ${{ steps.docker_meta.outputs.tags }}
          build-args: |
            DBUILD_DATE=${{ steps.date.outputs.DATE }}
            DBUILD_REPO_URL=https://github.com/openebs/jiva
            DBUILD_SITE_URL=https://openebs.io

