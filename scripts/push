#!/bin/bash
set -e

if [ -z ${IMAGE_REPO} ];
then
  echo "Error: IMAGE_REPO is not specified";
  exit 1
fi

source "$(dirname $0)/version"
TAG=${TAG:-${VERSION}}
IMAGE_ID=$(docker images -q ${IMAGE_REPO}:${TAG})
if [ -z ${IMAGEID} ];
then
  echo "Error: unable to get IMAGEID for ${IMAGE_REPO}:${VERSION}";
  exit 1
fi

function TagAndPushImage() {
  REPO="$1"
  TAG="$2"

  IMAGE_URI="${REPO}:${TAG}";
  sudo docker tag ${IMAGEID} ${IMAGE_URI};
  echo " push ${IMAGE_URI}";
  sudo docker push ${IMAGE_URI};
}

if [ ! -z "${DNAME}" ] && [ ! -z "${DPASS}" ];
then
  sudo docker login -u "${DNAME}" -p "${DPASS}";

  # Push CI tagged image - :ci or :branch-ci
  TagAndPushImage "${IMAGE_REPO}" "${CI_TAG}"

  # Push unique tagged image - :master-<uuid> or :branch-<uuid>
  # This unique/build image will be pushed to corresponding ci repo. 
  TagAndPushImage "${IMAGE_REPO}-ci" "${BUILD_TAG}"


  if [ ! -z "${TRAVIS_TAG}" ] ;
  then
    # Push with different tags if tagged as a release
    # When github is tagged with a release, then Travis will
    # set the release tag in env TRAVIS_TAG
    TagAndPushImage "${IMAGE_REPO}" "${TRAVIS_TAG}"
    TagAndPushImage "${IMAGE_REPO}" "latest"
  fi;
else
  echo "No docker credentials provided. Skip uploading ${IMAGE_REPO} to docker hub";
fi;

# Push ci image to quay.io for security scanning
if [ ! -z "${QNAME}" ] && [ ! -z "${QPASS}" ]; 
then 
  sudo docker login -u "${QNAME}" -p "${QPASS}" quay.io;

  # Push CI tagged image - :ci or :branch-ci
  TagAndPushImage "quay.io/${IMAGE_REPO}" "${CI_TAG}"

  if [ ! -z "${TRAVIS_TAG}" ] ;
  then
    # Push with different tags if tagged as a release
    # When github is tagged with a release, then Travis will
    # set the release tag in env TRAVIS_TAG
    TagAndPushImage "quay.io/${IMAGE_REPO}" "${TRAVIS_TAG}"
    TagAndPushImage "quay.io/${IMAGE_REPO}" "latest"
  fi;
else
  echo "No docker credentials provided. Skip uploading ${IMAGE_REPO} to quay";
fi;
#Push image to run openebs-e2e based on git commit
if [ ! -z "${COMMIT}" ] && [ ! -z "${DNAMEGL}" ] && [ ! -z "${DPASSGL}" ];
then
  sudo docker login -u "${DNAMEGL}" -p "${DPASSGL}";

  # Push COMMIT tagged image - :COMMIT
  TagAndPushImage "${IMAGE_REPO}" "${COMMIT}"
fi;
